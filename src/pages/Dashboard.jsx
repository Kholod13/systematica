import React, { useState } from 'react';
import logo from '../assets/logo.svg';
import { Routes, Route, Link, Outlet } from 'react-router-dom';
import plusIconBlack from "../assets/plus.png";

function Dashboard() {
  const chats = [0, 1, 2, 3, 4]; // –ü—Ä–∏–º–µ—Ä —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
  const agents = [1, 2]; // –ü—Ä–∏–º–µ—Ä —Å–ø–∏—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤

  // üîπ –°—Ç–µ–π—Ç—ã –¥–ª—è –º–æ–¥–∞–ª–∫–∏
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [input1, setInput1] = useState("");
  const [input2, setInput2] = useState("");

  // üîπ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
  const handleCreate = () => {
    console.log("–°–æ–∑–¥–∞–Ω —á–∞—Ç:", { input1, input2 });
    setIsModalOpen(false); // –∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ
    setInput1("");
    setInput2("");
  };

  return (
    <div className="wrapper">
      <header>
        <div className="logoBlock">
          <img src={logo} alt="Vite logo" height={40} />
        </div>
        <div className="navBlock">
          <p style={{marginLeft: "40px", fontWeight: 600, fontSize: "18px"}}>GPT</p>
        </div>
      </header>

      <main className="content">
        {/* Sidebar */}
        <aside className="sidebar">
          <div className='sidebarTitle'>
            <p>–ê–≥–µ–Ω—Ç–∏</p>
          </div>
          <ul style={{ listStyle: "none", padding: 0 }}>
            {agents.map((id) => (
              <li className='sidebarItem' key={id}>
                <Link to={`agent/${id}`}><p>–ê–≥–µ–Ω—Ç {id}</p></Link>
              </li>
            ))}
          </ul>

          <div className='sidebarTitle'>
            <p>–ß–∞—Ç–∏</p>
            <button className='addChatButton' onClick={() => setIsModalOpen(true)}>
              <img style={{width: '15px'}} src={plusIconBlack} alt='Add'></img>
            </button>
          </div>

          <ul style={{ listStyle: "none", padding: 0 }}>
            {chats.map((id) => (
              <li className='sidebarItem' key={id}>
                <Link to={`chat/${id}`}><p>–ß–∞—Ç {id}</p></Link>
              </li>
            ))}
          </ul>
        </aside>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
        <section className="chat">
          <Outlet /> {/* —Å—é–¥–∞ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è Chat */}
        </section>
      </main>

      {/* üîπ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      {isModalOpen && (
        <div className="modalOverlay">
          <div className="modal">
            <p>–ù–∞–∑–≤–∞ —á–∞—Ç—É</p>
            <input
              type="text"
              placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É"
              value={input1}
              onChange={(e) => setInput1(e.target.value)}
              className='inputLogin'
              style={{ outline: 'none', boxShadow: '0 0 5px #9C9C9C'}}
            />
            <p>–ú–æ–¥–µ–ª—å —á–∞—Ç—É</p>
            <input
              type="text"
              placeholder="–í–≤–µ–¥—ñ—Ç—å –º–æ–¥–µ–ª—å"
              value={input2}
              onChange={(e) => setInput2(e.target.value)}
              className='inputLogin'
              style={{ outline: 'none', boxShadow: '0 0 5px #9C9C9C'}}
            />
            <div style={{ display: 'flex', gap: '30px', padding: '10px' }}>
              <button className='buttonLogin' onClick={handleCreate}>Create</button>
              <button className='buttonLogin' onClick={() => setIsModalOpen(false)}>Cancel</button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default Dashboard;
